/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

	'use strict';
	
	// Section validation status
	var sectionStatus = {
	  1: false,
	  2: false,
	  3: false,
	  4: false
	};
	
	// Doc ready
	$(document).ready(function() {
	
	  // Initialise modules
	  Ellipsis.watch('[am-summary~=description]');
	
	  // Initialise validation
	  Validation.init();
	
	  // Specific field validation
	  $('[name=payment-card-number]').change(function(event) {
	    Validation.cardNumber(this);
	  });
	
	  $('[name=payment-security-number]').change(function() {
	    Validation.cvv(this);
	  });
	
	  $('[name=payment-tc]').change(function() {
	    Validation.checkbox(this);
	  });
	
	
	  $('[am-checkout-tabs~=list]').first().addClass('active');
	
	  // Initialise billing copy
	  sameBilling();
	
	  // Continue button click
	  $('[am-checkout~=continue]').click(function(e) {
	
	    // Validate current section
	    var section = $(this).parents('[data-section]')[0],
	        sectionNumber = $(section).attr('data-section'),
	        valid = Validation.section(section);
	
	    // Validate accept checkbox
	    if (sectionNumber == 3) {
	      var acceptCheckbox = Validation.checkbox('[name=payment-tc]'),
	          cardNumber = Validation.cardNumber('[name=payment-card-number]'),
	          cvv = Validation.cvv('[name=payment-security-number]');
	
	      if (!acceptCheckbox || !cardNumber || !cvv) {
	        valid = false;
	      }
	    }
	
	    // Update section status & tab labels
	    var sectionNumber = $(section).attr('data-section');
	        sectionStatus[sectionNumber] = valid;
	        labelTabs();
	
	    // Open next section
	    if (valid) {
	      var nextSection = parseInt(sectionNumber) + 1,
	          nextTab = $('[am-checkout-tabs~=list]').find('[data-tab=' + nextSection + ']');
	
	      openSection(nextSection);
	
	      // Scroll to top of form
	      $('html, body').animate({
	        scrollTop: $(nextTab).offset().top
	      }, 300);
	    }
	
	    // Prevent default action
	    e.preventDefault();
	  });
	
	  // Toggle CVV explanation
	  $('[am-checkout~=explain-cvv]').click(function(e) {
	    $('[am-checkout~=cvv-explanation]').slideToggle(200);
	    e.preventDefault();
	  });
	
	  // Review edit link click
	  $('[am-checkout~=edit]').click(function(e) {
	
	    // Get tab number
	    var tabNumber = $(this).attr('data-tab');
	
	    // Activate section
	    openSection(tabNumber);
	
	    // Check first tab active
	    if(tabNumber == 1) {
	
	      // Detect input content change
	      $('[data-section~=1]').bind('input', function() {
	        // Unckeck same as delivery checkbox
	        $('input[name=billing-copy]').prop('checked', false);
	
	        // Remove all edit tags 
	        $('[data-tab]').addClass('incomplete').removeClass('complete');
	
	      });
	    }
	
	    // Prevent default action
	    e.preventDefault();
	  });
	
	  // Detect input content change for step 2
	  $('[data-section~=2]').bind('input', function() {
	    // Unckeck same as delivery checkbox
	    $('input[name=billing-copy]').prop('checked', false);
	  });
	
	});
	
	
	// Open form section
	// --------------------------------
	
	function openSection(sectionNumber) {
	
	  // Activate section
	  $('[data-section]').removeClass('active');
	  $('[data-section=' + sectionNumber + ']').addClass('active');
	
	  // Activate tab
	  $('[data-tab]').removeClass('active');
	  $('[data-tab=' + sectionNumber + ']').addClass('active');
	
	  if ($('[data-tab=' + sectionNumber + ']').hasClass('active')) {
	    $('[data-tab=' + sectionNumber + ']').parent().addClass('active');
	  }
	
	  // Check if last section is active
	  if (sectionNumber == 4) {
	    reviewData();
	  }
	}
	
	
	// Label tabs complete/incomplete
	// --------------------------------
	
	function labelTabs() {
	
	  // Loop section status & mark tabs as complete or incomplete
	  for (var key in sectionStatus) {
	    if (sectionStatus[key]) {
	
	      // Tab complete
	      $('[data-tab~=' + key + ']').removeClass('incomplete').addClass('complete');
	    } else {
	
	      // Tab incomplete
	      $('[data-tab~=' + key + ']').addClass('incomplete').removeClass('complete');
	    }
	  }
	}
	
	
	// Review data
	// --------------------------------
	
	function reviewData() {
	
	  // Store all values in object
	  var data = {};
	
	  $('[name]').each(function() {
	    data[$(this).attr('name')] = $(this).val().trim();
	  });
	
	  // Build review strings
	  var delivery = data['delivery-first-name'] + ' ' + data['delivery-last-name'] + '<br>' +
	                 data['delivery-line-1'] + (data['delivery-line-2'] ? ', ' + data['delivery-line-2'] : '') + '<br>' +
	                 data['delivery-city'] + ', ' + data['delivery-state'] + '<br>' +
	                 data['delivery-zip'];
	
	  var billing = data['billing-first-name'] + ' ' + data['billing-last-name'] + '<br>' +
	                data['billing-line-1'] + (data['billing-line-2'] ? ', ' + data['billing-line-2'] : '') + '<br>' +
	                data['billing-city'] + ', ' + data['billing-state'] + '<br>' +
	                data['billing-zip'];
	
	  var payment = data['payment-card-type'] + ' XXXX XXXX XXXX ' + data['payment-card-number'].substr(data['payment-card-number'].length - 4);
	
	  // Apply review data
	  $('[am-checkout=review-delivery]').html(delivery);
	  $('[am-checkout=review-billing]').html(billing);
	  $('[am-checkout=review-payment]').html(payment);
	}
	
	
	// Copy delivery info
	// --------------------------------
	
	function sameBilling() {
	  var billingCheck = $('input[name=billing-copy]'),
	      billingFirst = $('input[name=billing-first-name]'),
	      billingLast = $('input[name=billing-last-name]'),
	      billingLine1 = $('input[name=billing-line-1]'),
	      billingLine2 = $('input[name=billing-line-2]'),
	      billingCity = $('input[name=billing-city]'),
	      billingState = $('input[name=billing-state]'),
	      billingZip = $('input[name=billing-zip]');
	
	  billingCheck.click(function() {
	    if ($(this).is(':checked')) {
	      billingFirst.val($('input[name=delivery-first-name]').val());
	      billingLast.val($('input[name=delivery-last-name]').val());
	      billingLine1.val($('input[name=delivery-line-1]').val());
	      billingLine2.val($('input[name=delivery-line-2]').val());
	      billingCity.val($('input[name=delivery-city]').val());
	      billingState.val($('input[name=delivery-state]').val());
	      billingZip.val($('input[name=delivery-zip]').val());
	
	      //Remove all invalid classes
	      $('[data-section="2"] :input').removeClass('invalid');
	
	      // Initialise dynamic validation
	      Validation.init();
	
	    } else {
	      billingFirst.val('');
	      billingLast.val('');
	      billingLine1.val('');
	      billingLine2.val('');
	      billingCity.val('');
	      billingState.val('');
	      billingZip.val('');
	
	      // Initialise dynamic validation
	      Validation.init();
	    }
	  });
	}

/***/ })
/******/ ]);
//# sourceMappingURL=checkout.min.js.map
//# sourceMappingURL=checkout.min.js.map
