/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Page components
	var Height = __webpack_require__(1),
	    Center = __webpack_require__(2),
	    SocialSharing = __webpack_require__(3);
	
	// Doc ready
	$(document).ready(function() {
	  UserMessage.init();
	
	  // Center nav on active item
	  Center.init('[am-sub-nav~=item].active', '[am-sub-nav~=inner]');
	
	  // Make hero blocks equal height
	  Height.init('[am-connections~=equal-height]', '[am-connections~=equal-height]');
	
	  // Toggle like
	  $('[data-icon~=heart]').on('click', function(e) {
	    e.preventDefault();
	    $(this).attr('data-icon', $(this).attr('data-icon') == 'heart-fill' ? 'heart' : 'heart-fill');
	  });
	
	  // Toggle follow
	  $('[am-btn~=follow]').on('click', function() {
	    $(this).html() == 'Unfollow' ? $(this).html('Follow') : $(this).html('Unfollow');
	
	    $(this).attr('am-btn', function(index, attr){
	      return attr == 'cross fill follow' ? 'tick fill follow' : 'cross fill follow';
	    });
	  });
	
	  // Clear search on focus
	  var input = $('[am-banner~=connections-content] [am-form~=input]');
	
	  $(input).on('focus', function() {
	    $(this).data('previous-value', $(this).val());
	    $(this).val('');
	  }); 
	
	  // Restore search on blur
	  $(input).on('blur', function() {
	    if ($(this).val() == '') {
	      $(this).val($(this).data('previous-value'));
	    }
	  });
	
	
	  $('[am-connections~=form] input').on('keyup', function() {
	
	    var text = $(this).val(),
	        text_length = text.length;
	
	    // Show clear button
	    if (text_length > 0) {
	  
	      $('[am-connections~=search-clear]').show();
	
	    } else {
	
	      $('[am-connections~=search-clear]').hide();
	    }
	
	    // Show results
	    if (text_length > 2) {
	  
	      $('[am-connections~=search-list]').slideDown();
	
	    } else {
	
	      $('[am-connections~=search-list]').slideUp();
	    }
	  });
	
	
	  $('[am-connections~=search-clear]').on('click', function() {
	    // Clear input
	    $('[am-connections~=form] input').val('');
	
	    // Hide button
	    $(this).hide();
	
	    // Hide results list
	    $('[am-connections~=search-list]').slideUp();
	  });
	
	  // Social Sharing
	  SocialSharing.init('[am-breadcrumb~=social]', '[am-social~=sharing-icons]');
	
	});


/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	  init: function(container, column, breakpoint) {
	
	    // Store scope
	    var scope = this;
	
	    if (typeof breakpoint !== typeof undefined && breakpoint !== false) {
	      var breakpoint = breakpoint;
	    } else {
	      var breakpoint = '768';
	    }
	
	    // Apply product grid heights
	    scope.itemHeight(container, column, breakpoint);
	
	    $(window).on('resize', function() {
	      Throttle.afterEvent('itemHeight', function() {
	        scope.itemHeight(container, column, breakpoint);
	      });
	    });
	  },
	
	  // Apply heights to product grid columns
	  // --------------------------------
	
	  itemHeight: function(container, column, breakpoint) {
	
	    // Store scope
	    var scope = this;
	
	    // Store product height
	    var colHeight = 0;
	
	    // Target breakpoints above mobile
	    if ($(window).width() >= breakpoint) {
	
	      // Loop products and get height
	      $(container).each(function() {
	        var itemHeight = $(this).outerHeight();
	        if (itemHeight > colHeight) {
	          colHeight = itemHeight;
	        }
	      });
	
	    } else {
	
	      // Set height to auto on mobile
	      colHeight = 'auto';
	    }
	
	    // Apply height to all columns
	    $(column).outerHeight(colHeight);
	  }
	};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	  init: function(target, outer) {
	    var outer = $(outer),
	        target = $(target),
	        outerWidth = outer.width(),
	        targetWidth = target.outerWidth(true),
	        targetPosition = target.index(),
	        count = 0,
	        listItem = outer.find('li');
	
	    //Add up the width of all the elements before our target. 
	    for(var i = 0; i < targetPosition; i++){
	      count+= $(listItem[i]).outerWidth(true);
	    }
	
	    outer.scrollLeft(Math.max(0, count - (outerWidth - targetWidth) / 2));
	
	  }
	};

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	
	  // Execution
	  // --------------------------------
	  init: function (el, elShow) {
	    $(el).on('click', function (e) {
	      $(this).toggleClass('active');
	      $(this).next(elShow).toggleClass('active');
	
	      e.preventDefault();
	    });
	  }
	};

/***/ })
/******/ ]);
//# sourceMappingURL=connections.min.js.map
//# sourceMappingURL=connections.min.js.map
