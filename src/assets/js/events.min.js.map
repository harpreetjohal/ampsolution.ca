{"version":3,"names":[],"mappings":"","sources":["events.min.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Page components\n\tvar Filter = __webpack_require__(1);\n\t\n\t// Doc ready\n\t$(document).ready(function() {\n\t\n\t  UserMessage.init();\n\t  Filter.init('[am-filter~=dropdown]','[am-filter~=toggle]');\n\t\n\t  var chosenDate = $('[am-event~=calendar-input]').val(),\n\t      dateSpan = $('[am-event~=calendar-month]'),\n\t\n\t      // Get current date\n\t      currentDate = new Date(),\n\t\n\t      // Get month from current date\n\t      currentMonth = currentDate.getMonth(),\n\t\n\t      // Month list\n\t      monthList = [\n\t        \"January 2017\",\n\t        \"February 2017\",\n\t        \"March 2017\",\n\t        \"April 2017\",\n\t        \"May 2017\",\n\t        \"June 2017\",\n\t        \"July 2017\",\n\t        \"August 2017\",\n\t        \"September 2017\",\n\t        \"October 2017\",\n\t        \"November 2017\",\n\t        \"December 2017\"\n\t      ],\n\t\n\t      // Convert list to array\n\t      monthArray = $.makeArray(monthList),\n\t\n\t      monthList = $('[am-event~=month-list-inner]'),\n\t      monthItem = '',\n\t      monthLink = '',\n\t\n\t      // Detect IE11\n\t      isIE11 = !!navigator.userAgent.match(/Trident.*rv\\:11\\./);\n\t\n\t  // Create month navigation\n\t  $.each(monthArray, function(i) {\n\t\n\t    if(i === currentMonth) {\n\t    monthItem = $('<li/>')\n\t      .attr('class', 'active')\n\t      .attr('am-event', 'month-item')\n\t      .attr('data-count', i)\n\t      .appendTo(monthList);\n\t    } else {\n\t    monthItem = $('<li/>')\n\t      .attr('am-event', 'month-item')\n\t      .attr('data-count', i)\n\t      .appendTo(monthList);      \n\t    }\n\t\n\t    monthLink = $('<a/>')\n\t      .attr('am-event', 'month-link')\n\t      .text(monthArray[i])\n\t      .appendTo(monthItem);\n\t  });\n\t\n\t  // Carousel month navigation\n\t  $('[am-event~=month-item]').on('click', function() {\n\t    var monthCount = $(this).data('count'),\n\t        parentDiv = $('[am-event~=month-list]'),\n\t        innerListItem = $(this);\n\t\n\t    $('[am-event~=month-item]').removeClass('active');\n\t    $(this).addClass('active');\n\t\n\t    // Update carousel position\n\t    $('[am-carousel~=list-full]').trigger('to.owl.carousel', [monthCount, 150, true]);\n\t\n\t    // Update current month heading\n\t    dateSpan.html(monthArray[monthCount]);\n\t\n\t    // Scroll current month to middle\n\t    parentDiv.scrollTop((monthCount - 3) * innerListItem.height());\n\t\n\t  });\n\t\n\t  // Close dropdown on click outside of dropdown\n\t  $('[am-event~=\"calendar-link\"]').click(function() {\n\t    $(this).addClass('active');\n\t  });\n\t\n\t  $('body').on('click', function (e) {\n\t    if ($('[am-event~=\"calendar-link\"]').hasClass('active')) { \n\t        $('[am-event~=\"month-list\"]').css('display', 'block');\n\t        $('[am-event~=\"calendar-link\"]').removeClass('active');\n\t    } else {\n\t      $('[am-event~=\"month-list\"]').css('display', 'none');\n\t    }\n\t  });\n\t\n\t  // Loop through each carousel\n\t  $('[am-event~=all-events] [am-carousel~=list-full] [am-carousel~=item]').each(function() {\n\t\n\t    // Count carousel items\n\t    var itemCount = $(this).find('[am-event~=item]').length;\n\t\n\t    // Append load more CTA if more than 4 items\n\t    if(itemCount >= 4) {\n\t      $(this).append('<div am-event=\"more\"><a href=\"{{#}}\" am-btn=\"fill arrow\" am-bg=\"black\">Show more</a></div>');\n\t    };\n\t  });\n\t\n\t  // Display current month heading\n\t  dateSpan.html(monthArray[currentMonth]);\n\t\n\t  // Toggle events calendar navigation\n\t  $('[am-event~=calendar]').on('click', function() {\n\t    $('[am-event~=month-list]').slideToggle('fast');\n\t  });\n\t\n\t  // Scroll current month to middle\n\t  $('[am-event~=calendar]').one('click', function() {\n\t    $('[am-event~=month-list]').scrollTop((currentMonth - 3) * $('[am-event~=month-item]').height());\n\t  });\n\t\n\t  // Initiate top stories carousel\n\t  $('[am-event~=your-events] [am-carousel~=list-full]').owlCarousel({\n\t    center: true,\n\t    dots: false,\n\t    loop: false,\n\t    margin: 0,\n\t    nav: true,\n\t    items: 1,\n\t    rtl: false,\n\t    rewind: false,\n\t    lazyLoad: true,\n\t    onTranslated: setOwlYourHeight,\n\t    onInitialized: setOwlYourHeight,\n\t    navText: ['<div am-carousel=\"next-small\"><i data-icon=\"arrow-left\"></i></div>','<div am-carousel=\"prev-small\"><i data-icon=\"arrow-right\"></i></div>']\n\t  });\n\t\n\t  // Initiate top stories carousel\n\t  if(isIE11) {\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full]').owlCarousel({\n\t      center: true,\n\t      dots: false,\n\t      loop: false,\n\t      margin: 0,\n\t      nav: true,\n\t      items: 1,\n\t      rtl: false,\n\t      rewind: false,\n\t      autoHeight: true,\n\t      animateOut: 'fadeOut',\n\t      smartSpeed: 10,\n\t      fluidSpeed: 10,\n\t      navSpeed: 10,\n\t      lazyLoad: true,\n\t      onChanged: updateMonth,\n\t      startPosition: currentMonth,\n\t      navText: ['<div am-carousel=\"next-small\"><i data-icon=\"arrow-left\"></i></div>','<div am-carousel=\"prev-small\"><i data-icon=\"arrow-right\"></i></div>']\n\t    });\n\t\n\t  } else {\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full]').owlCarousel({\n\t      center: true,\n\t      dots: false,\n\t      loop: false,\n\t      margin: 0,\n\t      nav: true,\n\t      items: 1,\n\t      rtl: false,\n\t      rewind: false,\n\t      lazyLoad: true,\n\t      onChanged: updateMonth,\n\t      startPosition: currentMonth,\n\t      onTranslated: setOwlAllHeight,\n\t      onInitialized: setOwlAllHeight,\n\t      navText: ['<div am-carousel=\"next-small\"><i data-icon=\"arrow-left\"></i></div>','<div am-carousel=\"prev-small\"><i data-icon=\"arrow-right\"></i></div>']\n\t    });    \n\t  }\n\t\n\t  // Update month title\n\t  function updateMonth(e) {\n\t    dateSpan.html(monthArray[e.item.index]);\n\t\n\t    $('[am-event~=month-item]').removeClass('active');\n\t    $('[am-event~=month-item]').eq(e.item.index).addClass('active');\n\t  }\n\t\n\t  //Fix for autoHeight iPad bug\n\t  function setOwlAllHeight(event) {\n\t    var maxHeight = 0;\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full] .owl-item.active').each(function () {\n\t        var thisHeight = parseInt( $(this).height() );\n\t        maxHeight = (maxHeight >= thisHeight ? maxHeight : thisHeight);\n\t    });\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full].owl-carousel').css('height', maxHeight );\n\t    $('[am-event~=all-events] [am-carousel~=list-full] .owl-stage-outer').css('height', maxHeight );\n\t  }  \n\t\n\t  function setOwlYourHeight(event) {\n\t    var maxHeight = 0;\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full] .owl-item.active').each(function () {\n\t        var thisHeight = parseInt( $(this).height() );\n\t        maxHeight = (maxHeight >= thisHeight ? maxHeight : thisHeight);\n\t    });\n\t\n\t    $('[am-event~=all-events] [am-carousel~=list-full].owl-carousel').css('height', maxHeight );\n\t    $('[am-event~=all-events] [am-carousel~=list-full] .owl-stage-outer').css('height', maxHeight );\n\t  }  \n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\n\t\n\t  // Initialise module\n\t  // --------------------------------\n\t\n\t  init: function(toggleButton, slideToggleButton) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Slide toggle desktop filter on option click\n\t    $(toggleButton).on('click', function(e) {\n\t      scope.slideToggle('[am-filter~=container]', '[am-filter~=list]', '4.1rem');\n\t      $('[am-filter~=container]').toggleClass('active');\n\t      e.preventDefault();\n\t    });\n\t\n\t    // Toggle filter on mobile toggle click\n\t    $(slideToggleButton).on('click', function(e) {\n\t      scope.toggle('[am-filter~=list]', '[am-filter~=toggle]');\n\t      e.preventDefault();\n\t    });\n\t  },\n\t\n\t\n\t  // Slide toggle filter\n\t  // --------------------------------\n\t\n\t  slideToggle: function(container, el, height) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Return if breakpoint is mobile\n\t    if ($(window).width() <= 767) {\n\t      return;\n\t    }\n\t\n\t    // Calculate height of filter\n\t    if (scope.status.slide) {\n\t      var filterHeight = height;\n\t    } else {\n\t      var filterHeight = $(el).outerHeight();\n\t    }\n\t\n\t    // Apply height to filter container\n\t    $(container).outerHeight(filterHeight);\n\t\n\t    // Update filter status\n\t    scope.status.slide = !scope.status.slide;\n\t  },\n\t\n\t\n\t  // Filter status\n\t  // --------------------------------\n\t\n\t  status: {},\n\t\n\t\n\t  // Toggle mobile filter\n\t  // --------------------------------\n\t\n\t  toggle: function(list, el) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Toggle filter list\n\t    $(list).toggleClass('active');\n\t\n\t    // Apply active class to mobile filter toggle\n\t    $(el).toggleClass('active');\n\t\n\t    // Update filter status\n\t    scope.status.toggle = !scope.status.toggle;\n\t  },\n\t\n\t  //Sort filter functionality\n\t  sort: function(filterButtons, filterItems, filterList, filterToggle) {\n\t\n\t    var $items = $(filterItems),\n\t        $buttons = $(filterButtons),\n\t        tagged = {};\n\t\n\t    $items.each(function () {\n\t      var item = this;\n\t      var tags = $(this).data('tags');\n\t\n\t      if (tags) {\n\t        tags.split(/\\s*,\\s*/).forEach(function (tagName) {\n\t          if (tagged[tagName] == null) {\n\t            tagged[tagName] = [];\n\t          }\n\t          tagged[tagName].push(item);\n\t        });\n\t      }\n\t    });\n\t\n\t    $buttons.click(function(e) {\n\t      e.preventDefault();\n\t      var tagName = $(this).data('tags');\n\t\n\t      if (tagName === 'all') {\n\t\n\t        $('[data-tags]').removeClass('active');\n\t        $(this).addClass('active');\n\t        $items.show();\n\t        // Hide filterList active class\n\t        $(filterList).removeClass('active');\n\t        $('[am-filter~=container]').removeClass('active').css('height', '4.1rem');\n\t\n\t      } else {\n\t        // Remove the class active from the all button\n\t        $('[data-tags~=all]').removeClass('active');\n\t\n\t        if ($(this).attr('data-tags')) {\n\t          $(this).toggleClass('active');\n\t        }\n\t\n\t        // Create current array\n\t        var current = [];\n\t\n\t        $(filterButtons + '.active').each(function() {\n\t          current.push($(this).attr('data-tags'));\n\t        });\n\t\n\t        $items.hide();\n\t\n\t        $.each($items, function () {\n\t          var theTag = $(this).data('tags');\n\t\n\t          if ((/\\s*,\\s*/).test(theTag)) {\n\t            var resultArray = theTag.split(',').map( function(theTag) { return String(theTag); });\n\t\n\t            for (var i = 0; i < resultArray.length ; i++) {\n\t              if ( $.inArray( resultArray[i] , current) != -1) {\n\t                $(this).show();\n\t              }\n\t            }\n\t\n\t          } else {\n\t\n\t            if ($.inArray(theTag, current) != -1) {\n\t              $(this).show();\n\t            }\n\t\n\t          }\n\t        });\n\t      }\n\t\n\t      // Hide filtertoggle active class\n\t      $(filterToggle).removeClass('active');\n\t\n\t      // Show all the items if nothing is selected\n\t      if (! $(filterButtons).hasClass('active')) {\n\t        $items.show();\n\t        $('[data-tags~=all]').addClass('active');\n\t      }\n\t\n\t    });\n\t\n\t  },\n\t};\n\n/***/ })\n/******/ ]);\n"],"file":"events.min.js","sourceRoot":"/source/"}