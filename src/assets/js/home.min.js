/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Page components
	var Cookie = __webpack_require__(1);
	
	// Doc ready
	$(document).ready(function() {
	  UserMessage.init();
	
	  // Retreive cookie value
	  var cookieSet = Cookie.getCookie('ezsignup');
	
	  // Hide CTA if cookie is set
	  if(cookieSet === 'true') {
	    $('[am-cta~=wrap]').hide();
	  }
	
	  // Hide CTA
	  $('[am-btn~=not-now]').on('click', function() {
	    $('[am-cta~=wrap]').hide();
	    Cookie.setCookie('ezsignup', 'true', '7');
	  });
	
	  // Social nav
	  $('[am-nav~=social-link]').on('click', function() {
	    $('[am-login~=public-social]').slideToggle();
	  });
	
	  var ts = $('[am-carousel~=double]');
	
	  // Initiate top stories carousel
	  $('[am-carousel~=top-stories]').owlCarousel({
	    autoplay: true,
	    autolayHoverPause: true,
	    center: true,
	    loop: true,
	    margin: 0,
	    nav: true,
	    rtl: false,
	    rewind: false,
	    navText: ['<div am-carousel="next-small"><i data-icon="arrow-left"></i></div>','<div am-carousel="prev-small"><i data-icon="arrow-right"></i></div>'],
	    responsive: {
	      0: {
	        items: 1
	      },
	      768: {
	        items: 2
	      }
	    }
	  });
	
	  // Autoplay controles
	  $('[am-carousel~="play"]').on('click', function() {
	    $('[am-carousel~=top-stories]').trigger('play.owl.autoplay');
	    $('[am-carousel~="autoplay"]').removeClass('active');
	    $(this).addClass('active');
	  });
	
	  $('[am-carousel~="pause"]').on('click', function() {
	    $('[am-carousel~=top-stories]').trigger('stop.owl.autoplay');
	    $('[am-carousel~="autoplay"]').removeClass('active');
	    $(this).addClass('active');
	  });
	
	  // Initiate what's happening carousel
	  var owl = $('[am-carousel~=double]');
	
	  $(owl).owlCarousel({
	    autoplay: true,
	    autolayHoverPause: true,
	    center: true,
	    dots: false,
	    loop: true,
	    margin: 0,
	    merge: true,
	    rewind: false,
	    responsive: {
	      0: {
	        items: 1,
	        slideBy: 1
	      },
	      768: {
	        items: 2,
	        slideBy: 1
	      },
	      992: {
	        items: 3,
	        slideBy: 1
	      }
	    }
	  });
	
	  // prev/next nav
	  $('[am-carousel~=nav] [am-carousel~=next-small]').click(function(e) {
	    owl.trigger('next.owl.carousel');
	    e.preventDefault();
	  });
	
	  // Set custom event for PREV custom control
	  $('[am-carousel~=nav] [am-carousel~=prev-small]').click(function(e) {
	    owl.trigger('prev.owl.carousel');
	    e.preventDefault();
	  });
	
	  // Enable tooltips
	  if (typeof tooltips !== 'undefined' && tooltips) {
	    Tooltips.init();
	  }
	  
	});

/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	  setCookie: function(name, value, days) {
	
	    var date,
	        expires;
	
	    if (days) {
	      date = new Date();
	      date.setTime(date.getTime() + (days*24*60*60*1000));
	      expires = '; expires=' + date.toGMTString();
	    } else {
	      expires = '';
	    }
	
	    document.cookie = name + '=' + value + expires + '; path=/';
	  },
	
	  getCookie: function(name) {
	    var value = '; ' + document.cookie,
	        parts = value.split('; ' + name + '=');
	        
	    if (parts.length == 2) return parts.pop().split(';').shift();
	  }
	};

/***/ })
/******/ ]);
//# sourceMappingURL=home.min.js.map
//# sourceMappingURL=home.min.js.map
