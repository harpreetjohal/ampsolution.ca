{"version":3,"names":[],"mappings":"","sources":["message-board.min.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Page components\n\tvar SocialSharing = __webpack_require__(1),\n\t    Charcount = __webpack_require__(2);\n\t\n\t// Doc ready\n\t$(document).ready(function() {\n\t\n\t  SocialSharing.init('[am-breadcrumb~=social]', '[am-social~=sharing-icons]');\n\t\n\t  // Initiate pods swiper carousel\n\t  $('[am-carousel~=pinned-list]').owlCarousel({\n\t    dots: false,\n\t    margin: 0,\n\t    nav: true,\n\t    rtl: false,\n\t    rewind: false,\n\t    items: 3,\n\t    navText: ['<div am-carousel=\"next\"><i data-icon=\"arrow-left\"></i></div>', '<div am-carousel=\"prev\"><i data-icon=\"arrow-right\"></i></div>']\n\t  });\n\t\n\t  // Open flag modal\n\t  $('[am-thread~=flag]').on('click', function(e) {\n\t    // Get post ID\n\t    var post = $(this).attr('data-post');\n\t\n\t    // Open modal\n\t    Modal.show('commentflag');\n\t\n\t    $('[am-form~=post]').val(post);\n\t    e.preventDefault();\n\t  });\n\t\n\t\n\t  // Close flag modal\n\t  $('[am-modal~=close]').on('click', function(e) {\n\t    Modal.hide('commentflag');\n\t\n\t    // Clear textarea\n\t    $('[am-form~=charcount]').val('');\n\t    e.preventDefault();\n\t  });\n\t\n\t  // Open message modal\n\t  $('[am-message~=post]').click(function(e) {\n\t    e.preventDefault();\n\t\n\t    // Open moda\n\t    Modal.show('threadModal');\n\t  });\n\t\n\t  // Close message modal\n\t  $('[am-modal~=close]').on('click', function(e) {\n\t    Modal.hide('threadModal');\n\t\n\t    // Clear form values\n\t    $('[am-flag~=form]').find('input[type=text], textarea').val('');\n\t\n\t    e.preventDefault();\n\t  });\n\t\n\t  // Form validation\n\t  Validation.init();\n\t\n\t  $('[am-btn~=submit]').on('click', function(e) {\n\t    // Validate form\n\t    var section = $(this).parents('[am-modal~=container]')[0],\n\t        valid = Validation.section(section);\n\t\n\t    // Invalid - prevent submit\n\t    if (!valid) {\n\t      e.preventDefault();\n\t    }\n\t  });\n\t\n\t\n\t  // Feedback char count\n\t  Charcount.init(250, '[am-form~=charcount-feedback]', '[am-form~=charcount]');\n\t\n\t  // Cancel message\n\t  $('[am-messages~=cancel]').click(function(e) {\n\t\n\t    // Confirm action\n\t    var confirm = window.confirm('Are you sure you want to delete this message?');\n\t\n\t    // Unconfirmed - prevent default\n\t    if (!confirm) {\n\t      e.preventDefault();\n\t    }\n\t  });\n\t\n\t  // Toggle like\n\t  $('[data-icon~=heart]').on('click', function(e) {\n\t    e.preventDefault();\n\t    $(this).attr('data-icon', $(this).attr('data-icon') == 'heart-fill' ? 'heart' : 'heart-fill');\n\t  });\n\t\n\t  // Toggle pin\n\t  $('[data-icon~=pin]').on('click', function(e) {\n\t    e.preventDefault();\n\t    $(this).attr('data-icon', function () {\n\t\n\t        if ($(this).attr('data-icon') == 'pin-fill') {\n\t\n\t          // Confirm action\n\t          var confirm = window.confirm('Are you sure you want to unpin this article?');\n\t\n\t          // Unconfirmed - prevent default && keep pin filled\n\t          if (!confirm) {\n\t            e.preventDefault();\n\t          } else {\n\t            // Confirmed - unfill pin\n\t            $(this).attr('data-icon', 'pin');\n\t          }\n\t\n\t        } else if ($(this).attr('data-icon') == 'pin') {\n\t          $(this).attr('data-icon', 'pin-fill');\n\t        }\n\t      }\n\t    );\n\t  });\n\t\n\t  // Delete message\n\t  $('[data-icon~=trash]').on('click', function(e) {\n\t\n\t    // Confirm action\n\t    var confirm = window.confirm('Are you sure you want to delete this message?');\n\t\n\t    // Unconfirmed - prevent default\n\t    if (!confirm) {\n\t      e.preventDefault();\n\t    }\n\t  });\n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\n\t\n\t  // Execution\n\t  // --------------------------------\n\t  init: function (el, elShow) {\n\t    $(el).on('click', function (e) {\n\t      $(this).toggleClass('active');\n\t      $(this).next(elShow).toggleClass('active');\n\t\n\t      e.preventDefault();\n\t    });\n\t  }\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\n\t  // Initialise module\n\t  // --------------------------------\n\t\n\t  init: function(count, feedback, el) {\n\t\n\t    var text_max = count;\n\t\n\t    // Add max chars text\n\t    $(feedback).html(text_max + ' remaining');\n\t\n\t    // Listen for keyup on element\n\t    $(el).keyup(function() {\n\t      var text = $(el).val(),\n\t          text_length = text.length,\n\t          text_remaining = text_max - text_length,\n\t          newLines = text.match(/(\\r\\n|\\n|\\r)/g),\n\t          addition = 0;\n\t\n\t      // Detect line breaks\n\t      if (newLines != null) {\n\t        addition = newLines.length;\n\t      }\n\t\n\t      // Update max chars text\n\t      $(feedback).html((text_remaining - addition) + ' remaining');\n\t    });\n\t  }\n\t};\n\n\n/***/ })\n/******/ ]);\n"],"file":"message-board.min.js","sourceRoot":"/source/"}