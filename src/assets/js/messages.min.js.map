{"version":3,"names":[],"mappings":"","sources":["messages.min.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// Doc ready\n\t$(document).ready(function() {\n\t\n\t   //Initialise modules\n\t  Ellipsis.watch('[am-message-list~=message]');\n\t\n\t  // Listen for message mark changes\n\t  $('[am-message-list~=mark] input').bind('change', messageMarkChange);\n\t\n\t  // Mark all messages\n\t  $('[am-messages-toolbar~=mark-all]').click(markAllMessages);\n\t});\n\t\n\t// Message marked change\n\tfunction messageMarkChange() {\n\t\n\t  // Check if message is marked\n\t  if ($(this).prop('checked')) {\n\t\n\t    // Enable message toolbar\n\t    $('[am-messages-toolbar~=dynamic]').removeClass('disabled');\n\t  } else {\n\t\n\t    // Check if any messags are marked\n\t    var messageToolbarOn = false;\n\t\n\t    $('[am-message-list~=mark] input').each(function() {\n\t      if ($(this).prop('checked')) {\n\t        messageToolbarOn = true;\n\t      }\n\t    });\n\t\n\t    // Disable toolbar\n\t    if (!messageToolbarOn) {\n\t      $('[am-messages-toolbar~=dynamic]').addClass('disabled');\n\t    }\n\t  }\n\t}\n\t\n\t// Mark all messages\n\tfunction markAllMessages(e) {\n\t\n\t  // Prevent default action\n\t  e.preventDefault();\n\t\n\t  // Mark all message\n\t  $('[am-message-list~=mark] input').each(function() {\n\t    $(this).prop('checked', true);\n\t    $('[am-messages-toolbar~=dynamic]').removeClass('disabled');\n\t  });\n\t}\n\n/***/ })\n/******/ ]);\n"],"file":"messages.min.js","sourceRoot":"/source/"}