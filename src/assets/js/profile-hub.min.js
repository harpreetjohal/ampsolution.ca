/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Page components
	var Height = __webpack_require__(1),
	    SocialSharing = __webpack_require__(2);
	
	// Doc ready
	$(document).ready(function() {
	
	  // Profile hub gold
	  // --------------------------------
	  // Progress bar for profile hub gold page
	  $('[am-profile~=activity-bar]').each(function ( index ) {
	    index = index + 1;
	    ProgressBar.init('[am-progress~=activity-' + index + ']', '[am-progress~=activity-inner-' + index + ']', 'data-total', 'data-complete');
	  });
	
	  // Profile hub main
	  // --------------------------------
	  // Progress bar for profile hub page
	  ProgressBar.init('[am-progress~=profile]', '[am-progress~=profile-inner]', 'data-total', 'data-complete');
	  ProgressBar.user('[am-progress~=level]', '[am-progress~=level-inner]', 'data-start', 'data-total', 'data-complete', 'data-markers', 'data-units', 'data-level', 'data-nextlevel');
	  Height.init('[am-profile~=tile]', '[am-profile~=tiles] > [am-row] > [am-col]', '992');
	
	  SocialSharing.init('[am-profile~=tile-sharing]', '[am-social~=sharing-icons]');
	
	  // Initiate gallery carousel
	  var owl = $('[am-carousel~=double]');
	
	  $(owl).owlCarousel({
	    center: true,
	    dots: false,
	    loop: true,
	    margin: 0,
	    merge: true,
	    rewind: false,
	    responsive: {
	      0: {
	        items: 1,
	        slideBy: 1
	      },
	      992: {
	        items: 6,
	        slideBy: 1
	      }
	    }
	  });
	
	  $('[am-carousel~=nav] [am-carousel~=next-small]').click(function () {
	    owl.trigger('next.owl.carousel');
	  });
	
	  // Set custom event for PREV custom control
	  $('[am-carousel~=nav] [am-carousel~=prev-small]').click(function () {
	    owl.trigger('prev.owl.carousel');
	  });
	
	  // Profile hub overlay
	  // --------------------------------
	
	  // Open modal and start confetti when page loads
	  Modal.show('prizeWinner');
	
	  Confetti.init('<canvas am-canvas="confetti competition">', '[am-modal~=confetti]');
	
	  // Prize selection
	  $('[am-box~=list] [am-box~=wrapper]').on('click', function(e) {
	
	    // Hide options and show result
	    $('[am-box~=list]').addClass('hide');
	    $('[am-box~=prize-block]').addClass('show');
	
	    // Get the selected box number
	    var boxNo = $(this).find('[am-box~=fourth]').html();
	
	    // Apply the box number to the winning box
	    $('[am-box~=prize-block]').find('[am-box~=fourth], [am-box~=second]').html(boxNo);
	
	    e.preventDefault();
	  });
	
	  // Close modal
	  $('[am-modal~=close]').on('click', function(e) {
	    Modal.hide('prizeWinner');
	    e.preventDefault();
	  });
	
	  // Check if form option needs truncating
	  function truncateSelect(formName) {
	
	    $(formName).parent().removeClass('overflow');
	
	    var formWidth = $(formName).parent().width() - 50;
	    var selOpt = $(formName).find("option:selected");
	    var spanWrap = $('<span>').addClass('overflow').text(selOpt.text());
	
	    spanWrap.css({
	        'font-family': selOpt.css('font-family'),
	        'font-style': selOpt.css('font-style'),
	        'font-weight': selOpt.css('font-weight'),
	        'font-size': selOpt.css('font-size')
	    });
	
	    $('body').append(spanWrap);
	    
	    var optionWidth = spanWrap.width();
	
	    if(optionWidth > formWidth) {
	
	      $(formName).parent().addClass('overflow');
	     
	    }
	
	    spanWrap.remove();
	  }
	
	  $('[name="[5].PrimarySell"]').change(function() {
	
	    truncateSelect(this);
	  });
	  
	  $('[name="[10].State"]').change(function() {
	
	    truncateSelect(this);
	  });
	});


/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	  init: function(container, column, breakpoint) {
	
	    // Store scope
	    var scope = this;
	
	    if (typeof breakpoint !== typeof undefined && breakpoint !== false) {
	      var breakpoint = breakpoint;
	    } else {
	      var breakpoint = '768';
	    }
	
	    // Apply product grid heights
	    scope.itemHeight(container, column, breakpoint);
	
	    $(window).on('resize', function() {
	      Throttle.afterEvent('itemHeight', function() {
	        scope.itemHeight(container, column, breakpoint);
	      });
	    });
	  },
	
	  // Apply heights to product grid columns
	  // --------------------------------
	
	  itemHeight: function(container, column, breakpoint) {
	
	    // Store scope
	    var scope = this;
	
	    // Store product height
	    var colHeight = 0;
	
	    // Target breakpoints above mobile
	    if ($(window).width() >= breakpoint) {
	
	      // Loop products and get height
	      $(container).each(function() {
	        var itemHeight = $(this).outerHeight();
	        if (itemHeight > colHeight) {
	          colHeight = itemHeight;
	        }
	      });
	
	    } else {
	
	      // Set height to auto on mobile
	      colHeight = 'auto';
	    }
	
	    // Apply height to all columns
	    $(column).outerHeight(colHeight);
	  }
	};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	
	  // Execution
	  // --------------------------------
	  init: function (el, elShow) {
	    $(el).on('click', function (e) {
	      $(this).toggleClass('active');
	      $(this).next(elShow).toggleClass('active');
	
	      e.preventDefault();
	    });
	  }
	};

/***/ })
/******/ ]);
//# sourceMappingURL=profile-hub.min.js.map
//# sourceMappingURL=profile-hub.min.js.map
