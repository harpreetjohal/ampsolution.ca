/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	
	// Page components
	var Center = __webpack_require__(1);
	
	// Doc ready
	$(document).ready(function() {
	
	  // Center nav on active item
	  Center.init('[am-profile~=nav-item].active', '[am-profile~=nav-inner]');
	
	});


/***/ }),
/* 1 */
/***/ (function(module, exports) {

	'use strict';
	
	module.exports = {
	
	  init: function(target, outer) {
	    var outer = $(outer),
	        target = $(target),
	        outerWidth = outer.width(),
	        targetWidth = target.outerWidth(true),
	        targetPosition = target.index(),
	        count = 0,
	        listItem = outer.find('li');
	
	    //Add up the width of all the elements before our target. 
	    for(var i = 0; i < targetPosition; i++){
	      count+= $(listItem[i]).outerWidth(true);
	    }
	
	    outer.scrollLeft(Math.max(0, count - (outerWidth - targetWidth) / 2));
	
	  }
	};

/***/ })
/******/ ]);
//# sourceMappingURL=profile-navigation.min.js.map
//# sourceMappingURL=profile-navigation.min.js.map
