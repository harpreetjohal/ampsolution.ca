{"version":3,"names":[],"mappings":"","sources":["search-results.min.js"],"sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Page components\n\tvar Filter = __webpack_require__(1);\n\t\n\t// Doc ready\n\t$(document).ready(function() {\n\t\n\t  // Open search\n\t  Search.focus('[am-search~=form-results] [am-form~=input]');\n\t  Search.blur('[am-search~=form-results] [am-form~=input]');\n\t\n\t  // Filters\n\t  Filter.sort('[am-filter~=link][data-tags]', '[am-search~=result-container]', '[am-filter~=list]', '[am-filter~=toggle]');\n\t  Filter.sort('[am-filter~=sub-link]', '[am-search~=result-container]');\n\t  Filter.init('[am-filter~=dropdown] > [am-filter~=link]','[am-filter~=toggle]');\n\t\n\t});\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\n\t\n\t  // Initialise module\n\t  // --------------------------------\n\t\n\t  init: function(toggleButton, slideToggleButton) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Slide toggle desktop filter on option click\n\t    $(toggleButton).on('click', function(e) {\n\t      scope.slideToggle('[am-filter~=container]', '[am-filter~=list]', '4.1rem');\n\t      $('[am-filter~=container]').toggleClass('active');\n\t      e.preventDefault();\n\t    });\n\t\n\t    // Toggle filter on mobile toggle click\n\t    $(slideToggleButton).on('click', function(e) {\n\t      scope.toggle('[am-filter~=list]', '[am-filter~=toggle]');\n\t      e.preventDefault();\n\t    });\n\t  },\n\t\n\t\n\t  // Slide toggle filter\n\t  // --------------------------------\n\t\n\t  slideToggle: function(container, el, height) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Return if breakpoint is mobile\n\t    if ($(window).width() <= 767) {\n\t      return;\n\t    }\n\t\n\t    // Calculate height of filter\n\t    if (scope.status.slide) {\n\t      var filterHeight = height;\n\t    } else {\n\t      var filterHeight = $(el).outerHeight();\n\t    }\n\t\n\t    // Apply height to filter container\n\t    $(container).outerHeight(filterHeight);\n\t\n\t    // Update filter status\n\t    scope.status.slide = !scope.status.slide;\n\t  },\n\t\n\t\n\t  // Filter status\n\t  // --------------------------------\n\t\n\t  status: {},\n\t\n\t\n\t  // Toggle mobile filter\n\t  // --------------------------------\n\t\n\t  toggle: function(list, el) {\n\t\n\t    // Store scope\n\t    var scope = this;\n\t\n\t    // Toggle filter list\n\t    $(list).toggleClass('active');\n\t\n\t    // Apply active class to mobile filter toggle\n\t    $(el).toggleClass('active');\n\t\n\t    // Update filter status\n\t    scope.status.toggle = !scope.status.toggle;\n\t  },\n\t\n\t  //Sort filter functionality\n\t  sort: function(filterButtons, filterItems, filterList, filterToggle) {\n\t\n\t    var $items = $(filterItems),\n\t        $buttons = $(filterButtons),\n\t        tagged = {};\n\t\n\t    $items.each(function () {\n\t      var item = this;\n\t      var tags = $(this).data('tags');\n\t\n\t      if (tags) {\n\t        tags.split(/\\s*,\\s*/).forEach(function (tagName) {\n\t          if (tagged[tagName] == null) {\n\t            tagged[tagName] = [];\n\t          }\n\t          tagged[tagName].push(item);\n\t        });\n\t      }\n\t    });\n\t\n\t    $buttons.click(function(e) {\n\t      e.preventDefault();\n\t      var tagName = $(this).data('tags');\n\t\n\t      if (tagName === 'all') {\n\t\n\t        $('[data-tags]').removeClass('active');\n\t        $(this).addClass('active');\n\t        $items.show();\n\t        // Hide filterList active class\n\t        $(filterList).removeClass('active');\n\t        $('[am-filter~=container]').removeClass('active').css('height', '4.1rem');\n\t\n\t      } else {\n\t        // Remove the class active from the all button\n\t        $('[data-tags~=all]').removeClass('active');\n\t\n\t        if ($(this).attr('data-tags')) {\n\t          $(this).toggleClass('active');\n\t        }\n\t\n\t        // Create current array\n\t        var current = [];\n\t\n\t        $(filterButtons + '.active').each(function() {\n\t          current.push($(this).attr('data-tags'));\n\t        });\n\t\n\t        $items.hide();\n\t\n\t        $.each($items, function () {\n\t          var theTag = $(this).data('tags');\n\t\n\t          if ((/\\s*,\\s*/).test(theTag)) {\n\t            var resultArray = theTag.split(',').map( function(theTag) { return String(theTag); });\n\t\n\t            for (var i = 0; i < resultArray.length ; i++) {\n\t              if ( $.inArray( resultArray[i] , current) != -1) {\n\t                $(this).show();\n\t              }\n\t            }\n\t\n\t          } else {\n\t\n\t            if ($.inArray(theTag, current) != -1) {\n\t              $(this).show();\n\t            }\n\t\n\t          }\n\t        });\n\t      }\n\t\n\t      // Hide filtertoggle active class\n\t      $(filterToggle).removeClass('active');\n\t\n\t      // Show all the items if nothing is selected\n\t      if (! $(filterButtons).hasClass('active')) {\n\t        $items.show();\n\t        $('[data-tags~=all]').addClass('active');\n\t      }\n\t\n\t    });\n\t\n\t  },\n\t};\n\n/***/ })\n/******/ ]);\n"],"file":"search-results.min.js","sourceRoot":"/source/"}